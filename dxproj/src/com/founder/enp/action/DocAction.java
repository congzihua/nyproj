/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.forms.DocsForm;
import com.founder.enp.service.DocService;

/**
 * MyEclipse Struts Creation date: 07-20-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action
 */
public class DocAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		DocService service = new DocService();
		String oper = request.getParameter("oper");
		response.setHeader("Cache-Control", "no-store");
		response.setHeader("Pragma", "no-cache");
		response.setDateHeader("Expires", 0L);
		String info = "";
		LogEntity logEntity = new LogEntity();
		
		if (oper.equals("add")) {
			logEntity.setActiontype("起草公文");
			if (service.addDoc(request)) {
				info = "addsuccess";
				logEntity.setAction("起草公文成功");
			} else {
				info = "adderror";
				logEntity.setAction("起草公文失败");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);

		} else if (oper.equals("modify") || oper.equals("finish")) {
			
			if (service.modifyDoc(request)) {
				if (oper.equals("finish")) {
					logEntity.setActiontype("办结公文");
					info = "finishsuccess";
					logEntity.setAction("办结公文成功");
				} else {
					logEntity.setActiontype("修改公文");
					info = "editsuccess";
					logEntity.setAction("修改公文成功");
				}
			} else {
				if (oper.equals("finish")) {
					logEntity.setActiontype("办结公文");
					info = "finisherror";
					logEntity.setAction("办结公文失败");

				} else {
					info = "editerror";
					logEntity.setAction("修改公文失败");
				}
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);

		} else if (oper.equals("del")) {
			logEntity.setActiontype("删除公文");
			String flowids = request.getParameter("flowids");
			int f = service.deleteDoc(flowids);
			if (f == 2) {
				info = "nodel";
				logEntity.setAction("删除公文失败");
			} else if (f == 1) {
				info = "delsuccess";
				logEntity.setAction("删除公文成功");
			} else {
				info = "delerror";
				logEntity.setAction("删除公文失败");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
		} else if (oper.equals("restore")) {
			logEntity.setActiontype("恢复公文");
			logEntity.setActiontype("垃圾箱");
			String flowids = request.getParameter("flowids");
			if (service.restore(flowids)) {
				info = "restoresuccess";
				logEntity.setAction("恢复公文成功");
			} else {
				info = "restoreerror";
				logEntity.setAction("恢复公文失败");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
		} else if (oper.equals("delok")) {
			logEntity.setActiontype("彻底删除公文");
			String flowids = request.getParameter("flowids");
			logEntity.setActiontype("垃圾箱");
			if (service.delGarbage(flowids)) {
				info = "delsuccess";
				logEntity.setAction("删除公文成功");
			} else {
				info = "delerror";
				logEntity.setAction("删除公文失败");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
		} else if (oper.equals("checkModify")) {

			if (service.chekcRejectModifyDoc(request.getParameter("flowid"))) {
				info = "modifyReject";
			} else if (service.getCheckModify(Integer.parseInt(request
					.getParameter("docid")), request)) {
				info = "modifyOk";
			} else {
				info = "modifyNo";
			}
		} else if (oper.equals("clearsession")) {
			String docOper = (String) request.getSession().getAttribute(
					"docOper");
			if (docOper != null) {
				if (docOper.equals("modify") || docOper.equals("finish")) {
					DocsForm frm = (DocsForm) request.getSession()
							.getAttribute("docsForm");
					service.updateUnCheckModify(frm.getDocid(), request);
				}
			}
			request.getSession().setAttribute("docsForm", null);
			request.getSession().setAttribute("attache", null);
			request.getSession().setAttribute("selectTemplate", null);
			request.getSession().setAttribute("docOper", null);
			request.getSession().setAttribute("flowsid", null);
			request.getSession().setAttribute("attacheid", null);
		}
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (Exception exception) {
		}
		out.print(info);
		out.close();
		return null;
	}
}