/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.forms.SubmitForm;
import com.founder.enp.service.DocService;

/** 
 * MyEclipse Struts
 * Creation date: 08-07-2009
 * 
 * XDoclet definition:
 * @struts.action
 */
public class CounterSignAction extends Action {
	
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		DocService service = new DocService();
		String oper = request.getParameter("oper");
		response.setHeader("Cache-Control", "no-store");
		response.setHeader("Pragma", "no-cache");
		response.setDateHeader("Expires", 0L);
		if (oper.equals("checkWithDrow"))
		{
			String flowsid = request.getParameter("flowids");
			String info = "";
			if (service.chekcIsCounterSign(flowsid))
			{
				info = "noCounterSign";
			}
			else if (service.checkCounterSignISSubmit(flowsid))
			{
				info="nowithdrow";
			}
			PrintWriter out = null;
			try {
				out = response.getWriter();
			} catch (Exception exception) {
			}
			out.print(info);
			out.close();
		}
		if (oper.equals("check")) {
			String flowsid = request.getParameter("flowids");
			String info = "";
			if (!service.checkCounterSign(flowsid)) {

				info = "nosubmit";
			} else {
				info = "yessubmit";
			}
			PrintWriter out = null;
			try {
				out = response.getWriter();
			} catch (Exception exception) {
			}
			out.print(info);
			out.close();
		}
		if (oper.equals("submit"))
		{
			SubmitForm frm = (SubmitForm)form;
			LogEntity logEntity = new LogEntity();
			logEntity.setActiontype("会签公文");
			String tip = "";
			if (service.counterSignDoc(frm, request))
			{
				logEntity.setAction("会签公文成功");
				tip = "csignsuccess";
			}
			else
			{
				logEntity.setAction("会签公文失败");
				tip = "csignerror";
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			request.setAttribute("oper", tip);
			return mapping.findForward("tip");
		}
		if (oper.equals("withdrow"))
		{
			String flowsid = request.getParameter("flowsid");
			String userids = request.getParameter("userids");
			LogEntity logEntity = new LogEntity();
			logEntity.setActiontype("撤回会签用户");
			String tip = "";
			if (service.withDrowCounterSignUser(flowsid, userids, request))
			{
				logEntity.setAction("撤回会签用户成功");
				tip = "withdcssuccess";
			}
			else
			{
				logEntity.setAction("撤回会签用户失败");
				tip = "withdcserror";
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			request.setAttribute("oper", tip);
			return mapping.findForward("tip");
		}
		return null;
	}
}