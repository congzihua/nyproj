/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.entity.Parameter;
import com.founder.enp.entity.Template;
import com.founder.enp.entity.TemplateKeyWord;
import com.founder.enp.forms.TemplateForm;
import com.founder.enp.service.ParameterService;
import com.founder.enp.service.TemplateService;
import com.founder.enp.util.Global;

/**
 * MyEclipse Struts Creation date: 07-15-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action
 */
public class TemplateAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		String oper = request.getParameter("oper");
		TemplateService service = new TemplateService();
		TemplateForm frm = (TemplateForm) form;
		LogEntity logEntity = new LogEntity();
		logEntity.setActiontype("模板管理");
		if (oper.equals("del")) {
			String idString = request.getParameter("idString");
			int f = service.delete(idString);
			if (f == 2) {
				logEntity.setAction("删除模板失败");
				request.setAttribute("oper", "dontdel");
			} else if (f == 1) {
				logEntity.setAction("删除模板成功");
				request.setAttribute("oper", "delsuccess");
			} else if (f == 0) {
				logEntity.setAction("删除模板失败");
				request.setAttribute("oper", "delerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("upload")) {
			FormFile file = frm.getFile();
			Template tmp = service.selectTemplate(frm.getTempletid());
			String newName = service.upload(file, tmp.getFilename().substring(0,tmp.getFilename().lastIndexOf(".")));
			if (!newName.equals("")) {
				tmp.setFilename(newName);
				service.update(tmp);
				logEntity.setAction("上传模板成功");
				request.setAttribute("oper", "uploadsuccess");

			} else {
				logEntity.setAction("上传模板失败");
				request.setAttribute("oper", "uploaderror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("list")) {
			int currentPage = Integer.parseInt(request
					.getParameter("currentPage") == null ? "1" : request
					.getParameter("currentPage"));
			String keyword = frm.getTempletname();
			int count = 0;
			TemplateKeyWord keyWord = new TemplateKeyWord();
			if (keyword != null && !"".equals(keyword)) {
				keyword = keyword.trim();
				keyWord.setTempletname((new StringBuilder("%")).append(keyword)
						.append("%").toString());
			}
			count = service.queryTemplateCount(keyWord);
			keyWord.setPageInfo(20, currentPage);
			List list = service.listTemplate(keyWord);
			if (list == null || count == -1) {
				request.setAttribute("oper", "listerror");
				return mapping.findForward("info");
			}
			ParameterService paraService = new ParameterService();
			Parameter param = paraService.listParameter();
			request.setAttribute("templatePath", param.getTemplateip());
			request.setAttribute("keyword", keyword);
			request.setAttribute("count", Integer.valueOf(count));
			request.setAttribute("currentPage", Integer.valueOf(currentPage));
			request.setAttribute("pageCount", Integer.valueOf(Global
					.computePageCount(count)));

			request.setAttribute("list", list);
			return mapping.findForward("list");

		}
		if (oper.equals("add")) {

			FormFile file = frm.getFile();
			String fileName = file.getFileName();
			String templateName = "";
			//try {
				templateName = frm.getTempletname();//new String(frm.getTempletname().getBytes(
						//"ISO-8859-1"), "UTF-8");
			//} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
			//	e.printStackTrace();
			//}
			if (service.chekcName(templateName)) {
				request.setAttribute("oper", "rname");
				return mapping.findForward("info");
			}
			if (!fileName.trim().equals("")) {
				fileName = service.upload(file, String.valueOf(new Date().getTime()));
				if (fileName.equals("")) {
					request.setAttribute("oper", "uploaderror");
					return mapping.findForward("info");
				}
			}
			Template template = new Template();
			template.setTempletname(templateName);
			template.setFilename(fileName);
			if (service.add(template)) {
				logEntity.setAction("添加模板成功");
				request.setAttribute("oper", "addsuccess");
			} else {
				logEntity.setAction("添加模板失败");
				request.setAttribute("oper", "adderror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");

		}
		return null;
	}
}