/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.DocTypes;
import com.founder.enp.entity.DocTypesKeyWord;
import com.founder.enp.entity.LogEntity;
import com.founder.enp.entity.Template;
import com.founder.enp.forms.DocTypesForm;
import com.founder.enp.service.DocTypesService;
import com.founder.enp.util.Global;

/** 
 * MyEclipse Struts
 * Creation date: 07-16-2009
 * 
 * XDoclet definition:
 * @struts.action
 */
public class DocTypesAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		String oper = request.getParameter("oper");
	    DocTypesService service = new DocTypesService();
		DocTypesForm frm = (DocTypesForm)form;
		LogEntity logEntity = new LogEntity();
		logEntity.setActiontype("公文文种管理");
		if (oper.equals("list"))
		{
			int currentPage = Integer.parseInt(request.getParameter("currentPage") == null?"1":request.getParameter("currentPage"));
		    String keyword = frm.getTypename();
		    int count = 0;
		    DocTypesKeyWord keyWord = new DocTypesKeyWord();
		    if(keyword != null && !"".equals(keyword))
	        {
	            keyword = keyword.trim();
	            keyWord.setTypename((new StringBuilder("%")).append(keyword).append("%").toString());
	        }
			//int dmpid = Integer.parseInt(request.getParameter("dmpid"));
			//keyWord.setDmpid(dmpid);
			count = service.queryDocTypesCount(keyWord);
			keyWord.setPageInfo(20, currentPage);
			List list = service.listDocTypes(keyWord);
			if (list == null || count == -1)
			{
				request.setAttribute("oper", "listerror");
				return mapping.findForward("info");
			}
            request.setAttribute("DocTypesForm", frm);
            request.setAttribute("count", Integer.valueOf(count));
            request.setAttribute("currentPage", Integer.valueOf(currentPage));
            request.setAttribute("pageCount", Integer.valueOf(Global.computePageCount(count)));
			
			request.setAttribute("list", list);
			return mapping.findForward("list");
		}
        if (oper.equals("edit"))
        {
        	DocTypes types = new DocTypes();
		    types.setTempletid(frm.getTempletid());
			types.setTypename(frm.getTypename());
			types.setDoctypeid(frm.getDoctypeid());
			if (service.edit(types))
			{
				logEntity.setAction("修改公文文种信息成功");
				request.setAttribute("oper", "editsuccess");
			}
			else
			{
				logEntity.setAction("修改公文文种信息失败");
				request.setAttribute("oper", "editerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			 return mapping.findForward("info");
        }
		if (oper.equals("add"))
		{
			DocTypes types = new DocTypes();
			types.setDmpid(frm.getDmpid());
			Template template = new Template();
			template.setTempletid(frm.getTempletid());
			types.setTemplate(template);
			types.setTypename(frm.getTypename());
			if (service.add(types))
			{
				logEntity.setAction("增加公文文种信息成功");
				request.setAttribute("oper", "addsuccess");
			}
			else
			{
				logEntity.setAction("增加公文文种信息失败");
				request.setAttribute("oper", "adderror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
		    return mapping.findForward("info");
			
		}
		if (oper.equals("del"))
		{
			String idString = request.getParameter("idString");
			if (service.delete(idString))
			{
				logEntity.setAction("删除公文文种信息成功");
				request.setAttribute("oper", "delsuccess");
			}
			else
			{
				logEntity.setAction("删除公文文种信息失败");
				request.setAttribute("oper", "delerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		return null;
	}
}