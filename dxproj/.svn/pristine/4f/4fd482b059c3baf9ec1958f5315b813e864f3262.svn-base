/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.entity.User;
import com.founder.enp.entity.UserKeyWord;
import com.founder.enp.forms.UserForm;
import com.founder.enp.service.UserService;
import com.founder.enp.util.Global;

/** 
 * MyEclipse Struts
 * Creation date: 07-13-2009
 * 
 * XDoclet definition:
 * @struts.action
 */
public class UserAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String oper = request.getParameter("oper");
		UserService service = new UserService();
		LogEntity logEntity = new LogEntity();
		logEntity.setActiontype("用户管理");
		if (oper.equals("list"))
		{
			int currentPage = Integer.parseInt(request.getParameter("currentPage") == null?"1":request.getParameter("currentPage"));
		    String keyword = request.getParameter("name");
		    int count = 0;
		    UserKeyWord keyWord = new UserKeyWord();
		    if(keyword != null && !"".equals(keyword))
	        {
	            keyword = keyword.trim();
	            keyWord.setUserName((new StringBuilder("%")).append(keyword).append("%").toString());
	        }
			int dmpid = Integer.parseInt(request.getParameter("dmpid"));
			keyWord.setDmpid(dmpid);
			count = service.queryUserCount(keyWord);
			keyWord.setPageInfo(20, currentPage);
			List list = service.listUser(keyWord);
			if (list == null || count == -1)
			{
				request.setAttribute("oper", "listerror");
				return mapping.findForward("info");
			}

            request.setAttribute("userName", keyword);
            request.setAttribute("count", Integer.valueOf(count));
            request.setAttribute("currentPage", Integer.valueOf(currentPage));
            request.setAttribute("pageCount", Integer.valueOf(Global.computePageCount(count)));
			
			
			request.setAttribute("list", list);
			return mapping.findForward("list");
			
		}
		if (oper.equals("userInfo"))
		{
			int userid = Integer.parseInt(request.getParameter("userid"));
			User user = service.queryUserInfo(userid);
			//List list = service.queryUserGroup(userid);
			if (user == null)
			{
				request.setAttribute("oper", "listerror");
				return mapping.findForward("info");
			}
			request.setAttribute("userForm", user);
			//request.setAttribute("ugrelation", list);
			return mapping.findForward("userInfo");
		}
		UserForm frm = (UserForm)form;
		if (oper.equals("add"))
		{
			User user  = new User();
			user.setAccount(frm.getAccount());
			
			user.setDmpid(frm.getDmpid());
			user.setEmail(frm.getEmail());
			user.setName(frm.getName());
			user.setOther(frm.getOther());
			user.setPassword(frm.getPassword());
			user.setPhone(frm.getPhone());
			user.setStrUg(request.getParameter("strUg"));
			user.setType(frm.getType());
			user.setIm(frm.getIm());
			user.setOrders(1);
			user.setDelete_Flag("0");
			if (service.insertUser(user))
			{
			
				logEntity.setAction("增加用户成功");
				request.setAttribute("oper", "insertsuccess");
			}
			else
			{
				logEntity.setAction("增加用户失败");
				request.setAttribute("oper", "inserterror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
			
		}
		if (oper.equals("del"))
		{
			String strUserID = request.getParameter("idString");
			if (service.delUser(strUserID))
			{
				logEntity.setAction("删除用户成功");
				request.setAttribute("oper", "delsuccess");
			}
			else
			{
				logEntity.setAction("删除用户失败");
				request.setAttribute("oper", "delerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("transfer"))
		{
			String strUserIDs = request.getParameter("userids");
			String dmpid = request.getParameter("dmpid");
			if (service.transfer(dmpid, strUserIDs))
			{
				logEntity.setAction("调动用户成功");
				request.setAttribute("oper", "transferok");
			}
			else
			{
				logEntity.setAction("调动用户失败");
				request.setAttribute("oper", "transfererror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("order"))
		{
			Integer userid = Integer.parseInt(request.getParameter("userid"));
			Integer orders = Integer.parseInt(request.getParameter("order"));
			User user = new User();
			user.setUserid(userid);
			user.setOrders(orders);
			String info="orderok";
			if (!service.orderUser(user))
				info="ordererror";
			PrintWriter out = null;
			try {
				out = response.getWriter();
			} catch (Exception exception) {
			}
			out.print(info);
			out.close();
			return null;
		}
		if (oper.equals("edit"))
		{
			User user  = new User();
			user.setUserid(frm.getUserid());
		
			user.setAccount(frm.getAccount());
		
			user.setEmail(frm.getEmail());
			user.setName(frm.getName());
			user.setOther(frm.getOther());
			user.setPhone(frm.getPhone());
			user.setStrUg(request.getParameter("strUg"));
			user.setType(frm.getType());
			user.setIm(frm.getIm());
			if (service.editUser(user))
			{
				logEntity.setAction("修改用户成功");
				request.setAttribute("oper", "editsuccess");
			}
			else
			{
				logEntity.setAction("修改用户失败");
				request.setAttribute("oper", "editerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
			
		}
		return null;
	}
}