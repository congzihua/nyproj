/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.entity.UserKeyWord;
import com.founder.enp.service.UserService;

/**
 * MyEclipse Struts Creation date: 07-18-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action
 */
public class AccountieAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String oper = request.getParameter("oper");
		String userid = request.getParameter("userid");
		UserService service = new UserService();
		if (oper.equals("bound")) {
			String keyword = request.getParameter("name");
			UserKeyWord keyWord = new UserKeyWord();
			if (keyword != null && !"".equals(keyword)) {
				keyword = keyword.trim();
				keyWord.setUserName((new StringBuilder("%")).append(keyword)
						.append("%").toString());
			}
			keyWord.setUserid(Integer.parseInt(userid));
			List list = service.getBoundUser(keyWord);
			if (list == null) {
				request.setAttribute("oper", "getbounderror");
				return mapping.findForward("info");
			}
			request.setAttribute("userName", keyword);
			request.setAttribute("boundList", list);
			return mapping.findForward("boundList");
		}
		if (oper.equals("unbound")) {
			String keyword = request.getParameter("name");
			UserKeyWord keyWord = new UserKeyWord();
			if (keyword != null && !"".equals(keyword)) {
				keyword = keyword.trim();
				keyWord.setUserName((new StringBuilder("%")).append(keyword)
						.append("%").toString());
			}
			keyWord.setUserid(Integer.parseInt(userid));
			List list = service.getUnBoundUser(keyWord);
			if (list == null) {
				request.setAttribute("oper", "getunbounderror");
				return mapping.findForward("info");
			}
			request.setAttribute("userName", keyword);
			request.setAttribute("unBoundList", list);
			return mapping.findForward("unBoundList");
		}
		LogEntity logEntity = new LogEntity();
		logEntity.setActiontype("帐户绑定管理");
		if (oper.equals("updatebound")) {
			String idString = request.getParameter("idString");
			if (service.boundUser(Integer.parseInt(userid), idString)) {
				logEntity.setAction("用户绑定帐户成功");
				request.setAttribute("oper", "updateboundsuccess");
			} else {
				logEntity.setAction("用户绑定帐户失败");
				request.setAttribute("oper", "updatebounderror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("updateunbound")) {
			String idString = request.getParameter("idString");
			if (service.unBoundUser(Integer.parseInt(userid), idString)) {
				logEntity.setAction("解除用户绑定帐户成功");
				request.setAttribute("oper", "updateunboundsuccess");
			} else {
				logEntity.setAction("解除用户绑定帐户失败");
				request.setAttribute("oper", "updateunbounderror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		
		return null;
	}
}