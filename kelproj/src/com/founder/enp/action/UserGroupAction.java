/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.LogEntity;
import com.founder.enp.entity.UserGroup;
import com.founder.enp.forms.UserGroupForm;
import com.founder.enp.service.UserGroupService;

/**
 * MyEclipse Struts Creation date: 07-06-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class UserGroupAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String oper = request.getParameter("oper");
		UserGroupService service = new UserGroupService();
		LogEntity logEntity = new LogEntity();
		logEntity.setActiontype("组别设置");
		if (oper.equals("list")) {
			int dmpid = Integer.parseInt(request.getParameter("dmpid"));
			List list = service.queryDpmUg(dmpid);
			if (list == null) {
				return mapping.findForward("listugerror");
			}
			request.setAttribute("dmpid", request.getParameter("dmpid"));
			request.setAttribute("list", list);
			return mapping.findForward("list");
		}
		if (oper.equals("powersList"))
		{
			int id = Integer.parseInt(request.getParameter("id"));
			UserGroup group = service.queryPowersInfo(id);
			request.setAttribute("userGroupForm", group);
			return mapping.findForward("powers");
		}
		if (oper.equals("query")) {
			int id = Integer.parseInt(request.getParameter("id"));
			UserGroup group = service.queryUgInfo(id);
			request.setAttribute("userGroupForm", group);
			return mapping.findForward("query");

		}
		UserGroupForm frm = (UserGroupForm) form;
		UserGroup group = new UserGroup();
		if (oper.equals("powers")) {
			UserGroup groupTemp = new UserGroup();
			groupTemp.setId(frm.getId());
			groupTemp.setPowers(frm.getPowers());
			if (service.updatePowers(groupTemp)) {
				logEntity.setAction("设置权限成功");

				request.setAttribute("oper", "updatepowerssuccess");
			} else {
				logEntity.setAction("设置权限成功失败");
				request.setAttribute("oper", "updatepowerserror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");

		}
		if (oper.equals("edit")) {
			group.setId(frm.getId());
			group.setName(frm.getName());
			group.setMem(frm.getMem());
			if (service.editUg(group)) {
				logEntity.setAction("修改组别成功");
				request.setAttribute("oper", "editugsuccess");
			} else {
				logEntity.setAction("修改组别失败");
				request.setAttribute("oper", "editugerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("add")) {
			group.setDpmid(frm.getDpmid());
			group.setName(frm.getName());
			group.setMem(frm.getMem());
			if (service.addUserGroup(group)) {
				logEntity.setAction("添加组别成功");
				request.setAttribute("oper", "addugsuccess");
			} else {
				logEntity.setAction("添加组别失败");
				request.setAttribute("oper", "addugerror");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		if (oper.equals("del")) {
			String strUserGroupID = request.getParameter("idString");
			int f = service.delUserGroup(strUserGroupID);
			if (f == 1) {
				logEntity.setAction("删除组别成功");
				request.setAttribute("oper", "delsuccess");
			} else if (f == 0) {
				logEntity.setAction("删除组别失败");
				request.setAttribute("oper", "delerror");
			} else if (f == 2) {
				logEntity.setAction("删除组别失败");
				request.setAttribute("oper", "haveuser");
			}
			com.founder.enp.service.LogService.recordLog(logEntity, request);
			return mapping.findForward("info");
		}
		return null;
	}
}