/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.founder.enp.action;


import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.founder.enp.entity.DocEntity;
import com.founder.enp.entity.Parameter;
import com.founder.enp.forms.DocsForm;
import com.founder.enp.forms.SelectTemplateForm;
import com.founder.enp.service.DocService;
import com.founder.enp.service.DocTypesService;
import com.founder.enp.service.ParameterService;

/** 
 * MyEclipse Struts
 * Creation date: 08-01-2009
 * 
 * XDoclet definition:
 * @struts.action
 */
public class GetDocAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String oper = request.getParameter("oper");
		if (oper.equals("finish"))
			request.getSession().setAttribute("flowsid", request.getParameter("flowsid"));
		Integer docid = Integer.parseInt(request.getParameter("docid"));
		DocService serivce = new DocService();
		DocEntity docEntity = serivce.getDoc(docid);
		DocsForm docsForm = new DocsForm();
		docsForm.setCopyto(docEntity.getCopyto());
		docsForm.setCreatemode(docEntity.getCreatemode());
		docsForm.setCreateorg(docEntity.getCreateorg());
		docsForm.setCreator(docEntity.getCreator());
		docsForm.setDocid(docid);
		docsForm.setKeywords(docEntity.getKeywords());
		docsForm.setMaketime(docEntity.getMaketime());
		docsForm.setPrintnum(docEntity.getPrintnum());
		docsForm.setPublishlevel(docEntity.getPublishlevel());
		docsForm.setPublishOrg(docEntity.getPublishOrg());
		docsForm.setPublishtime(docEntity.getPublishtime()==null?"":docEntity.getPublishtime());
		docsForm.setSecret(docEntity.getSecret());
		docsForm.setSecretime(docEntity.getSecretime());
		docsForm.setTitle(docEntity.getTitle());
		docsForm.setToOrg(docEntity.getToOrg());
		docsForm.setTypename(docEntity.getTypename());
		docsForm.setUrgence(docEntity.getUrgence());
		docsForm.setDocnum(docEntity.getDocnum());
		String filePath = docEntity.getContent();
		SelectTemplateForm fm = new SelectTemplateForm();
		ParameterService service = new ParameterService();
		Parameter param = service.listParameter();
		fm.setSelect(2);
		DocTypesService docTypesService = new DocTypesService();
		fm.setDoctypesid(String.valueOf(docTypesService.getDocIDFromDocTypeName(docEntity.getTypename())));
		filePath = param.getHttpdnload()+"content/"+filePath;
		fm.setContent(filePath);
		String uploadContent = param.getContentip()+docEntity.getContent();
		fm.setContentName(uploadContent.replace("\\",  "\\\\"));
        List list = serivce.getDocAttache(docid);
        request.getSession().setAttribute("attache", list);
		request.getSession().setAttribute("selectTemplate", fm);
		request.getSession().setAttribute("docOper", oper);
		request.getSession().setAttribute("docsForm", docsForm);
		return mapping.findForward("docContent");
	}
}